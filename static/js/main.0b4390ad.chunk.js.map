{"version":3,"sources":["api.js","redux/books/books.js","redux/configureStore.js","components/nav.js","components/categories.js","components/Book.js","components/inputBook.js","components/bookList.js","App.js","index.js"],"names":["apiUrl","newBook","book","a","fetch","method","headers","body","JSON","stringify","item_id","title","category","result","status","getBooks","request","json","books","deleteBook","ADD_BOOK","REMOVE_BOOK","GET_BOOKS","initialState","reducer","state","action","type","payload","filter","combineReducers","booksReducer","store","createStore","applyMiddleware","logger","thunk","Navbar","className","href","id","path","text","map","link","to","Categories","Book","dispatch","useDispatch","removeBook","onClick","value","uuidv4","require","v4","InputBook","useState","setInputTitle","setInputCategory","onSubmit","e","addBook","preventDefault","name","placeholder","onChange","target","required","disabledvalue","BooksList","useSelector","useEffect","entries","Object","key","bookEntries","App","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b4390ad.chunk.js","sourcesContent":["const apiUrl = 'https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/qdrNrAMV3sFxA9qazfks/books';\n\nconst newBook = async (book) => {\n  const result = await fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      item_id: book.item_id,\n      title: book.title,\n      category: book.category,\n    }),\n  });\n\n  return result.status === 201;\n};\n\nconst getBooks = async () => {\n  const request = await fetch(apiUrl);\n  const books = await request.json();\n  return books;\n};\n\nconst deleteBook = async (book) => {\n  const result = await fetch(`${apiUrl}/${book.item_id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      item_id: book.item_id,\n    }),\n  });\n\n  return result === 'The book was deleted!';\n};\n\nexport { newBook, getBooks, deleteBook };\n","import { newBook, getBooks, deleteBook } from '../../api';\n\nconst ADD_BOOK = 'bookStore/books/ADD_BOOK';\nconst REMOVE_BOOK = 'bookStore/books/REMOVE_BOOK';\nconst GET_BOOKS = 'bookStore/books/GET_BOOKS';\n\nconst initialState = [];\n\nexport const addBook = (book) => async (dispatch) => {\n  await newBook(book);\n  dispatch({\n    type: ADD_BOOK,\n    payload: book,\n  });\n};\n\nexport const removeBook = (book) => async (dispatch) => {\n  await deleteBook(book);\n  dispatch({\n    type: REMOVE_BOOK,\n    payload: book,\n  });\n};\n\nexport const getAllBooks = () => async (dispatch) => {\n  const entries = await getBooks();\n  const books = Object.entries(entries).map(([key, value]) => {\n    const [bookEntries] = value;\n    return {\n      item_id: key,\n      ...bookEntries,\n    };\n  });\n  dispatch({\n    type: GET_BOOKS,\n    payload: books,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_BOOK:\n      return [...state, action.payload];\n    case REMOVE_BOOK:\n      return state.filter((book) => book.item_id !== action.payload.item_id);\n    case GET_BOOKS:\n      return [...state, ...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport booksReducer from './books/books';\n\nconst reducer = combineReducers({\n  booksReducer,\n\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger, thunk),\n);\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Books',\n    },\n    {\n      id: 2,\n      path: '/categories',\n      text: 'Categories',\n    },\n\n  ];\n\n  return (\n    <div className=\"navbar\">\n      <nav className=\"nav\">\n        <h1><a href=\"/\">Bookstore CMS</a></h1>\n        <ul>\n          {links.map((link) => (\n            <li key={link.id}>\n              <NavLink\n                to={link.path}\n\n              >\n                {link.text}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </nav>\n      <div className=\"circle\">\n        <i className=\"fas fa-user\" />\n      </div>\n    </div>\n  );\n};\nexport default Navbar;\n","import React from 'react';\n\nconst Categories = () => <h1>Under construction</h1>;\n\nexport default Categories;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport 'react-circular-progressbar/dist/styles.css';\nimport PropTypes from 'prop-types';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { removeBook } from '../redux/books/books';\n\nconst Book = ({ book }) => {\n  const percentage = 69;\n  const dispatch = useDispatch();\n  const deleteBook = (id) => {\n    dispatch(removeBook(id));\n  };\n\n  return (\n\n    <div className=\"bookContain\" key={book.item_id}>\n      <div className=\"bookInfo\">\n        <p className=\"category\">{book.category}</p>\n        <h3 className=\"bookName\">{book.title}</h3>\n        <p className=\"author\">The Author</p>\n        <div className=\"btns\">\n          <button type=\"submit\" className=\"infoBtns\">Comment</button>\n          <button type=\"submit\" className=\"infoBtns\" onClick={() => { deleteBook(book); }}>Remove</button>\n          <button type=\"submit\" className=\"infoBtns\">Edit</button>\n        </div>\n      </div>\n      <div className=\"progress-w-chap\">\n        <div className=\"progwithtxt\">\n          <div className=\"progress\">\n            <CircularProgressbar value={percentage} />\n          </div>\n          <div className=\"progressTXT\">\n            <h3 className=\"percentage\">\n              {percentage}\n              %\n            </h3>\n            <p>completed</p>\n          </div>\n        </div>\n        <div className=\"chapter\">\n          <p>CURRENT CHAPTER</p>\n          <h3>Chapter 42</h3>\n          <button type=\"button\">UPDATE PROGRESS</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nBook.propTypes = {\n  book: PropTypes.shape({\n    item_id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Book;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addBook } from '../redux/books/books';\n\nconst { v4: uuidv4 } = require('uuid');\n\nconst InputBook = () => {\n  const dispatch = useDispatch();\n  const [title, setInputTitle] = useState('');\n  const [category, setInputCategory] = useState('');\n\n  const onTitleChange = (e) => setInputTitle((e.target.value));\n  const onCategoryChange = (e) => setInputCategory((e.target.value));\n\n  const handleSubmit = (e) => {\n    const book = {\n      item_id: uuidv4(),\n      title,\n      category,\n    };\n    dispatch(addBook(book));\n    e.preventDefault();\n    setInputTitle('');\n    setInputCategory('');\n  };\n\n  return (\n    <div className=\"input_div\">\n      <h2>ADD NEW BOOK</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"title\" placeholder=\"Book Title\" value={title} onChange={onTitleChange} required />\n        <select\n          onChange={onCategoryChange}\n          name=\"categories\"\n          id=\"booksCategories\"\n        >\n          <option disabledvalue=\"default\">Select a category</option>\n          <option className=\"otherops\" value=\"Action\">Action</option>\n          <option className=\"otherops\" value=\"Biography\">Biography</option>\n          <option className=\"otherops\" value=\"Heroes\">Heroes</option>\n          <option className=\"otherops\" value=\"Drama\">Drama</option>\n          <option className=\"otherops\" value=\"Science Fiction\">Science Fiction</option>\n          <option className=\"otherops\" value=\"Horror\">Horror</option>\n          <option className=\"otherops\" value=\"Fantasy\">Fantasy</option>\n        </select>\n        <button type=\"submit\">ADD BOOK</button>\n      </form>\n    </div>\n  );\n};\n\nexport default InputBook;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllBooks } from '../redux/books/books';\nimport Book from './Book';\nimport InputBook from './inputBook';\n\nconst BooksList = () => {\n  const dispatch = useDispatch();\n  const { booksReducer } = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(getAllBooks());\n  }, [dispatch]);\n\n  return (\n\n    <div>\n      {booksReducer.map((book) => (\n        <Book\n          key={book.item_id}\n          book={book}\n        />\n      ))}\n      <InputBook />\n    </div>\n\n  );\n};\n\nexport default BooksList;\n","import './App.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/nav';\nimport Categories from './components/categories';\nimport BooksList from './components/bookList';\n\nfunction App() {\n  return (\n    <Router>\n\n      <Navbar />\n      <div className=\"main\">\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={(\n              <div>\n                <BooksList />\n\n              </div>\n)}\n          />\n          <Route path=\"/categories\" element={<Categories />} />\n\n        </Routes>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport store from './redux/configureStore';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}